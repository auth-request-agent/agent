name: Release

on:
  push:
    tags:
      - "*"

permissions:
  contents: write
  packages: write

jobs:
  build-binaries:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version: 1.23

      - name: Set up version
        id: version
        run: |
          echo "version=$(go run ./cmd/agent/main.go version)" >> "$GITHUB_OUTPUT"

      - name: Build
        run: |
          TARGET_OS=linux TARGET_ARCH=amd64 make agent-build-bin
          TARGET_OS=linux TARGET_ARCH=arm64 make agent-build-bin
          TARGET_OS=darwin TARGET_ARCH=amd64 make agent-build-bin
          TARGET_OS=darwin TARGET_ARCH=arm64 make agent-build-bin
          ls -la dist

      - name: Upload binaries
        uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a # v4.3.6
        with:
          name: binaries
          path: dist/

  publish-images:
    runs-on: ubuntu-latest
    needs: build-binaries
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0

      - name: Download release binaries
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          merge-multiple: true
          name: binaries
          path: dist/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1

      - name: Log in to the Container registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Build and Deploy Docker Images
        env:
          VERSION: ${{ needs.build-binaries.outputs.version }}
        run: |
          VERSION=$(make version)
          PLATFORM="linux/amd64,linux/arm64,linux/arm/v7" 
          OUTPUT_TYPE=registry 
          make agent-build-image

  create-release:
    runs-on: ubuntu-latest
    needs: [build-binaries, publish-images]
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Download release binaries
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          merge-multiple: true
          name: binaries
          path: dist/

      - name: Release
        uses: softprops/action-gh-release@c062e08bd532815e2082a85e87e3ef29c3e6d191 # v2.0.8
        with:
          draft: true
          token: ${{ secrets.GH_TOKEN }}
          repository: goauthlink/authlink
          generate_release_notes: true
          files: |
            dist/*.tar.gz 
            dist/*.sha256
